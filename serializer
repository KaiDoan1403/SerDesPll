`timescale 1ns / 1ps


module serializer (
    input wire clk,        
    input wire rst_n,      
    input wire [8-1:0] parallel_data, 
    input wire load,       
    output reg serial_out, 
    output reg ready       
);

  reg [7:0] shift_reg;
  reg [$clog2(8)-1:0] count;

  always @(posedge clk or posedge rst_n) begin
    if (rst_n) begin
      shift_reg <= 0;
      count     <= 0;
      ready     <= 1;
      serial_out <= 0;
    end else begin
      if (load && ready) begin      
        serial_out <=0;
        shift_reg <= parallel_data;
        count     <= 7; 
        ready     <= 0;         
      end 
      else if (count > 0) begin
        shift_reg <= shift_reg << 1;
        count     <= count - 1;
      end 
      else begin
        ready <= 1;
      end
      serial_out <= shift_reg[7];
    end
  end
    always@(posedge clk) begin 
    if(load) begin 
    serial_out <= 0; 
    end 
    end
endmodule
